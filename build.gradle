import org.ajoberstar.gradle.git.release.semver.*
import org.ajoberstar.gradle.git.release.opinion.Strategies

plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'de.gliderpilot.semantic-release' version '1.4.2'
    id 'java'
    id 'application'
}

group = 'com.example'
sourceCompatibility = '1.8'
mainClassName = "com.example.demo.DemoApplication"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    sourcesJar
}

project.ext.ghToken = project.hasProperty('ghToken') ? project.getProperty('ghToken') : System.getenv('GH_TOKEN') ?: null

release {
    versionStrategy semanticRelease.releaseStrategy.copyWith(
        selector: { SemVerStrategyState state ->
            !state.repoDirty && state.currentBranch.name == "main" }
    )
}

semanticRelease {
    repo {
        ghToken = project.ghToken
        releaseAsset jar, contentType: 'application/zip'
        releaseAsset sourcesJar, label: 'the sources of the project', contentType: 'application/zip'
    }
}

jar {
    manifest {
        attributes([
                "main-class": mainClassName
        ])
    }
}
afterEvaluate {
    println version
}
